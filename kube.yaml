apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: cassandradb-service
      name: cassandradb-service
    spec:
      ports:
        - name: "9042"
          port: 9042
          targetPort: 9042
      selector:
        io.kompose.service: cassandradb-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: kafka-service
      name: kafka-service
    spec:
      ports:
        - name: "9092"
          port: 9092
          targetPort: 9092
      selector:
        io.kompose.service: kafka-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m1application-service
      name: m1application-service
    spec:
      ports:
        - name: "8880"
          port: 8880
          targetPort: 8880
      selector:
        io.kompose.service: m1application-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m2application-service
      name: m2application-service
    spec:
      ports:
        - name: "8881"
          port: 8881
          targetPort: 8881
      selector:
        io.kompose.service: m2application-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m3application-service
      name: m3application-service
    spec:
      ports:
        - name: "8882"
          port: 8882
          targetPort: 8882
      selector:
        io.kompose.service: m3application-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m4application-service
      name: m4application-service
    spec:
      ports:
        - name: "8883"
          port: 8883
          targetPort: 8883
      selector:
        io.kompose.service: m4application-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: webapplication-service
      name: webapplication-service
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 80
      selector:
        io.kompose.service: webapplication-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper-service
      name: zookeeper-service
    spec:
      ports:
        - name: "2181"
          port: 2181
          targetPort: 2181
      selector:
        io.kompose.service: zookeeper-service
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: cassandradb-deploy
      name: cassandradb-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: cassandradb-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: cassandradb-deploy
        spec:
          containers:
            - env:
                - name: CASSANDRA_HOST
                  value: cassandradb-deploy
                - name: CASSANDRA_RPC_ADDRESS
                  value: 0.0.0.0
              image: cassandra
              imagePullPolicy: Never
              name: cassandradb-container
              ports:
                - containerPort: 9042
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: kafka-deploy
      name: kafka-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: kafka-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: kafka-deploy
        spec:
          containers:
            - env:
                - name: KAFKA_ADVERTISED_PORT
                  value: 9092
                - name: KAFKA_ADVERTISED_HOST
                  value: kafka-service
                - name: KAFKA_CREATE_TOPICS
                  value: k1-topic:1:1
                - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
                  value: "1"
                - name: KAFKA_ZOOKEEPER_CONNECT
                  value: zookeeper-service:2181
              image: confluentinc/cp-kafka:5.1.0
              name: kafka
              ports:
                - containerPort: 9092
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m1application-deploy
      name: m1application-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: m1application-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: m1application-deploy
        spec:
          containers:
            - env:
                - name: SPRING_KAFKA_BOOTSTRAPSERVERS
                  value: kafka-service:29092
              image: microservices-with-spring-boot_m1application
              imagePullPolicy: Never
              name: m1application-container
              ports:
                - containerPort: 8880
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m2application-deploy
      name: m2application-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: m2application-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: m2application-deploy
        spec:
          containers:
            - env:
                - name: SPRING_KAFKA_BOOTSTRAPSERVERS
                  value: kafka-service:29092
              image: microservices-with-spring-boot_m2application
              imagePullPolicy: Never
              name: m2application-container
              ports:
                - containerPort: 8881
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m3application-deploy
      name: m3application-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: m3application-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: m3application-deploy
        spec:
          containers:
            - env:
                - name: SPRING_KAFKA_BOOTSTRAPSERVERS
                  value: kafka-service:29092
              image: microservices-with-spring-boot_m3application
              imagePullPolicy: Never
              name: m3application-container
              ports:
                - containerPort: 8882
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: m4application-deploy
      name: m4application-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: m4application-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: m4application-deploy
        spec:
          containers:
            - image: microservices-with-spring-boot_m4application
              name: m4application-container
              imagePullPolicy: Never
              ports:
                - containerPort: 8883
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: webapplication-deploy
      name: webapplication-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: webapplication-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: webapplication-deploy
        spec:
          containers:
            - image: webapplication
              name: webapplication-container
              imagePullPolicy: Never
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper-deploy
      name: zookeeper-deploy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: zookeeper-deploy
      strategy: {}
      template:
        metadata:
          annotations:
  
  
          creationTimestamp: null
          labels:
            io.kompose.service: zookeeper-deploy
        spec:
          containers:
            - env:
                - name: ZOOKEEPER_CLIENT_PORT
                  value: "2181"
                - name: ZOOKEEPER_TICK_TIME
                  value: "2000"
              image: confluentinc/cp-zookeeper:5.1.0
              # imagePullPolicy: Never
              name: zookeeper-container
              ports:
                - containerPort: 2181
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

