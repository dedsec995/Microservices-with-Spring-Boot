apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m1application
  name: m1application
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: m1application
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: m1application
    spec:
      containers:
        - env:
            - name: SPRING_KAFKA_BOOTSTRAPSERVERS
              value: kafka-service:9092
          image: dedsec995/microservices-with-spring-boot_m1application
          name: m1application-container
          ports:
            - containerPort: 8880
          resources: {}
      restartPolicy: Always
status: {}


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m1application-service
  name: m1application-service
spec:
  ports:
    - name: "8880"
      port: 8880
      targetPort: 8880
  selector:
    io.kompose.service: m1application-service
status:
  loadBalancer: {}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m2application
  name: m2application
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: m2application
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: m2application
    spec:
      containers:
        - env:
            - name: SPRING_KAFKA_BOOTSTRAPSERVERS
              value: kafka-service:9092
          image: dedsec995/microservices-with-spring-boot_m2application
          name: m2application-container
          ports:
            - containerPort: 8881
          resources: {}
      restartPolicy: Always
status: {}


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m2application-service
  name: m2application-service
spec:
  ports:
    - name: "8881"
      port: 8881
      targetPort: 8881
  selector:
    io.kompose.service: m2application-service
status:
  loadBalancer: {}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m3application
  name: m3application
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: m3application
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: m3application
    spec:
      containers:
        - env:
            - name: SPRING_KAFKA_BOOTSTRAPSERVERS
              value: kafka-service:9092
          image: dedsec995/microservices-with-spring-boot_m3application
          name: m3application-container
          ports:
            - containerPort: 8882
          resources: {}
      restartPolicy: Always
status: {}


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m3application-service
  name: m3application-service
spec:
  ports:
    - name: "8882"
      port: 8882
      targetPort: 8882
  selector:
    io.kompose.service: m3application-service
status:
  loadBalancer: {}



---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m4application
  name: m4application
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: m4application
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: m4application
    spec:
      containers:
        - image: dedsec995/microservices-with-spring-boot_m4application
          name: m4application-container
          ports:
            - containerPort: 8883
          resources: {}
      restartPolicy: Always
status: {}


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: m4application-service
  name: m4application-service
spec:
  type: ClusterIP 
  ports:
    - name: "8883"
      port: 8883
  externalIPs:
    - 1.2.4.114
  selector:
    io.kompose.service: m4application-service
status:
  loadBalancer: {}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: webapplication
  name: webapplication
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webapplication
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: webapplication
    spec:
      containers:
        - image: webapplication:latest
          imagePullPolicy: Never
          name: webapplication
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: webapplication
  name: webapplication
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
  selector:
    io.kompose.service: webapplication
status:
  loadBalancer: {}
